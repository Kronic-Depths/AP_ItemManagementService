/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.saaif.item;

import static org.apache.commons.lang3.StringUtils.EMPTY;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemAttribute.ItemAnswerKey;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemAttribute.ItemFormat;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemAttribute.ItemId;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemAttribute.ItemPageLayout;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemAttribute.ItemResponseType;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemFormat.FORMAT_SA;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemFormat.FORMAT_WER;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemLanguage.LANG_ENU;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemPageLayout.PAGE_LAYOUT_SA;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemPageLayout.PAGE_LAYOUT_WER;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemResponseType.RESPONSE_TYPE_HTML_EDITOR;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemResponseType.RESPONSE_TYPE_PLAIN_TEXT;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemVersion.ITEM_RELEASE_VERSION;
import static org.opentestsystem.saaif.item.SaaifItemConstants.ItemVersion.ITEM_VERSION;

/**
 * Creates different entities, setting specific properties depending on what is required, and depending on the
 * scenario.
 */
public class SaaifItemFactory {

    private static final ObjectFactory OBJECT_FACTORY = new ObjectFactory();

    /**
     * The minimum valid {@link org.opentestsystem.saaif.item.ItemRelease} instance.
     *
     * @param itemId     The item id to set.
     * @param itemFormat The item format to create.
     * @param languages  The content sections to create, one per language.
     * @return An {@link org.opentestsystem.saaif.item.ItemRelease} instance.
     */
    public ItemRelease newAssessmentItem(String itemId, String itemFormat, String... languages) {
        return newAssessmentItem(newItem(itemId, itemFormat, languages));
    }

    /**
     * Creates an item wrapper (i.e. <code>ItemRelease</code>) for the given item.
     *
     * @param item The item encapsulated by the wrapper.
     * @return An {@link org.opentestsystem.saaif.item.ItemRelease} instance.
     */
    public ItemRelease newAssessmentItem(ItemRelease.Item item) {
        final ItemRelease itemRelease = OBJECT_FACTORY.createItemrelease();
        itemRelease.setVersion(ITEM_RELEASE_VERSION);
        itemRelease.setItem(item);
        return itemRelease;
    }

    /**
     * The minimum valid {@link org.opentestsystem.saaif.item.ItemRelease.Item} instance.
     *
     * @param itemId     The item id to set.
     * @param itemFormat The item format to create.
     * @param languages  The content sections to create, one per language.
     * @return An {@link org.opentestsystem.saaif.item.ItemRelease.Item} instance.
     */
    public ItemRelease.Item newItem(String itemId, String itemFormat, String... languages) {
        final ItemRelease.Item item;
        switch (itemFormat) {
            case FORMAT_SA:
                item = newShortAnswerItem(itemId, languages);
                break;
            case FORMAT_WER:
                item = newWerItem(itemId, languages);
                break;
            default:
                item = null;
                break;
        }
        return item;
    }

    /**
     * The minimum valid short answer {@link org.opentestsystem.saaif.item.ItemRelease.Item} instance.  A minimum short
     * answer requires at least one {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content} instance so there
     * should be at least one language passed in.  For each language given, there will be that number of minimum {@link
     * org.opentestsystem.saaif.item.ItemRelease.Item.Content} instances associated with the item.
     *
     * @param itemId    The item ID to set.
     * @param languages The languages to create {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content}
     *                  instances.
     * @return A {@link org.opentestsystem.saaif.item.ItemRelease.Item} instance.
     */
    public ItemRelease.Item newShortAnswerItem(String itemId, String... languages) {
        final ItemRelease.Item.Attriblist attributeList = newItemAttributeList(itemId,
            FORMAT_SA, PAGE_LAYOUT_SA, RESPONSE_TYPE_PLAIN_TEXT);

        final ItemRelease.Item item = newDefaultItem(itemId, FORMAT_SA, languages);
        item.setAttriblist(attributeList);
        return item;
    }

    /**
     * The minimum valid short answer {@link org.opentestsystem.saaif.item.ItemRelease.Item} instance.  A minimum short
     * answer requires at least one {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content} instance so there
     * should be at least one language passed in.  For each language given, there will be that number of minimum {@link
     * org.opentestsystem.saaif.item.ItemRelease.Item.Content} instances associated with the item.
     *
     * @param itemId    The item ID to set.
     * @param languages The languages to create {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content}
     *                  instances.
     * @return A {@link org.opentestsystem.saaif.item.ItemRelease.Item} instance.
     */
    public ItemRelease.Item newWerItem(String itemId, String... languages) {
        final ItemRelease.Item.Attriblist attributeList = newItemAttributeList(itemId,
            FORMAT_WER, PAGE_LAYOUT_WER, RESPONSE_TYPE_HTML_EDITOR);

        final ItemRelease.Item item = newDefaultItem(itemId, FORMAT_WER, languages);
        item.setAttriblist(attributeList);
        return item;
    }

    private ItemRelease.Item newDefaultItem(String itemId, String itemFormat, String... languages) {
        final ItemRelease.Item item = OBJECT_FACTORY.createItemreleaseItem();
        item.setId(itemId);
        item.setFormat(itemFormat);
        item.setVersion(ITEM_VERSION);

        if (languages != null) {
            for (String lang : languages) {
                item.getContent().add(newContent(lang));
            }
        }

        return item;
    }

    /**
     * Creates the same instance as the <code>newContent(String lang)</code> but passes the
     * default language of English.
     *
     * @return A {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content} instance.
     */
    public ItemRelease.Item.Content newDefaultContent() {
        return newContent(LANG_ENU);
    }

    /**
     * The minimum valid {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content} instance.
     *
     * @param lang The content language to set.
     * @return A {@link org.opentestsystem.saaif.item.ItemRelease.Item.Content} instance.
     */
    public ItemRelease.Item.Content newContent(String lang) {
        final ItemRelease.Item.Content content = OBJECT_FACTORY.createItemreleaseItemContent();
        content.setVersion(ITEM_RELEASE_VERSION);
        content.setLanguage(lang);
        content.setStem(EMPTY);
        return content;
    }

    /**
     * The minimum list of attributes when creating a new item.
     *
     * @param itemFormat       The Item Format attribute value.
     * @param itemPageLayout   The Page Layout attribute value.
     * @param itemResponseType The Response Type attribute value.
     * @return The minimum list of attributes.
     */
    public ItemRelease.Item.Attriblist newItemAttributeList(String itemId,
                                                            String itemFormat,
                                                            String itemPageLayout,
                                                            String itemResponseType) {
        final ItemRelease.Item.Attriblist attriblist = OBJECT_FACTORY.createItemreleaseItemAttriblist();
        attriblist.getAttrib().add(newAttribute(ItemId, itemId));
        attriblist.getAttrib().add(newAttribute(ItemFormat, itemFormat.toUpperCase()));
        attriblist.getAttrib().add(newAttribute(ItemAnswerKey, itemFormat.toUpperCase()));
        attriblist.getAttrib().add(newAttribute(ItemPageLayout, itemPageLayout));
        attriblist.getAttrib().add(newAttribute(ItemResponseType, itemResponseType));
        return attriblist;
    }

    /**
     * Creates attribute new {@link ItemRelease.Item.Attriblist.Attrib} instance.
     *
     * @param attribute
     * @param val       The attribute value.
     * @return An {@link ItemRelease.Item.Attriblist.Attrib} instance.
     */
    public ItemRelease.Item.Attriblist.Attrib newAttribute(SaaifItemConstants.ItemAttribute attribute, String val) {
        return newAttribute(attribute.getAttId(), attribute.getName(), val);
    }

    /**
     * Creates a new {@link ItemRelease.Item.Attriblist.Attrib} instance.
     *
     * @param attid The attribute id.
     * @param name  The attribute name.
     * @param val   The attribute value.
     * @return An {@link ItemRelease.Item.Attriblist.Attrib} instance.
     */
    public ItemRelease.Item.Attriblist.Attrib newAttribute(String attid, String name, String val) {
        final ItemRelease.Item.Attriblist.Attrib attribute = OBJECT_FACTORY.createItemreleaseItemAttriblistAttrib();
        attribute.setAttid(attid);
        attribute.setName(name);
        attribute.setVal(val);
        attribute.setDesc(EMPTY);
        return attribute;
    }
}
