/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.util;

import lombok.Getter;
import org.apache.commons.lang3.RandomUtils;

/**
 * Randomly generates an ID between the given min (inclusive) and max (exclusive) values.
 */
@Getter
public class ItemIdGenerator {

    private final int minValue;

    private final int maxValue;

    public ItemIdGenerator(int minValue, int maxValue) {
        this.minValue = minValue;
        this.maxValue = maxValue;
    }

    /**
     * Returns a string representing an item ID.
     *
     * @return A random string made up of only digits between min (inclusive) and max (exclusive) values.
     */
    public String generateItemId() {
        return Integer.toString(RandomUtils.nextInt(minValue, maxValue));
    }
}
