/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.config;

import org.opentestsystem.ap.ims.client.GitlabClient;
import org.opentestsystem.ap.ims.util.ItemIdGenerator;
import org.opentestsystem.saaif.item.SaaifItemFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * Enabled by default or if the itembank.test.enabled property is set to true.  If the property
 * is set to false the configuration is not loaded.
 */
@Configuration
@ConditionalOnProperty(value = "itembank.test.enabled", havingValue = "false", matchIfMissing = true)
public class ItemBankConfig {

    public final ItemBankProperties props;

    @Autowired
    public ItemBankConfig(ItemBankProperties props) {
        this.props = props;
    }

    @Bean
    public GitlabClient gitlabClient() {
        return new GitlabClient(props);
    }

    @Bean
    public ItemIdGenerator itemIdGenerator() {
        return new ItemIdGenerator(props.getIdMinValue(), props.getIdMaxValue());
    }

    @Bean
    public SaaifItemFactory itemFactory() {
        return new SaaifItemFactory();
    }

}
