/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.service;

import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.ims.entity.ItemBankUser;
import org.opentestsystem.ap.ims.repository.ItemBankRepository;
import org.opentestsystem.ap.ims.util.SecurityUtil;
import org.opentestsystem.saaif.item.ItemFactory;
import org.opentestsystem.saaif.item.ItemRelease;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Slf4j
@Service
public class ItemBankService {

    private final ItemBankRepository itemBankRepository;

    private final ItemFactory itemFactory;

    private final SecurityUtil securityUtil;

    @Autowired
    public ItemBankService(ItemBankRepository itemBankRepository,
                           ItemFactory itemFactory,
                           SecurityUtil securityUtil) {
        this.itemBankRepository = itemBankRepository;
        this.itemFactory = itemFactory;
        this.securityUtil = securityUtil;
    }

    /**
     * Create a new item in GitLab.
     *
     * @return The unique item identifier.
     */
    public String createItem(String itemType) {
        log.debug("create new item");
        final ItemBankUser user = newItemBankUser();
        final String itemId = itemBankRepository.initializeNewItem(user);
        final ItemRelease item = itemFactory.newDefaultItemWrapper(itemId, itemType);
        itemBankRepository.initializeItemType(user, item);
        return itemId;
    }

    private ItemBankUser newItemBankUser() {
        return new ItemBankUser(securityUtil.getUsername(), securityUtil.getFullname());
    }
}
