/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.model;

import org.opentestsystem.ap.ims.util.ResourceNotFoundException;
import org.opentestsystem.saaif.item.ItemRelease;

import static java.util.Collections.emptyList;
import static org.apache.commons.lang3.StringUtils.EMPTY;

/**
 * Creates new instances of model and saaif instances.
 */
public class ItemFactory {

    /**
     * Creates a new Item instance of the correct type.
     *
     * @param itemId   The unique item identifier.
     * @param itemType The type of item to create.
     * @return A new Item.
     */
    public Item newItem(final String itemId, final String itemType) {
        Item item = null;
        switch (itemType) {
            case ItemConstants.ItemType.TYPE_SA:
                item = SaItem.SaItemBuilder.aSaItem(itemId).prompt(EMPTY).exemplarResponses(emptyList()).build();
                break;
            case ItemConstants.ItemType.TYPE_WER:
                item = WerItem.WerItemBuilder.aWerItem(itemId).prompt(EMPTY).exemplarResponses(emptyList()).build();
                break;
            default:
                throw new ResourceNotFoundException("Item type not supported");
        }
        return item;
    }

    /**
     * Creates a new Item instance using the data from the saaif item.
     *
     * @param saaifItem The saaif item to use for setting values on the new Item.
     * @return A new Item.
     */
    public Item newItem(final ItemRelease saaifItem) {
        final String itemId = saaifItem.getItem().getId();
        final String itemType = saaifItem.getItem().getFormat();

        final Item item = newItem(itemId, itemType);
        item.fromSaaif(saaifItem);

        return item;
    }
}
