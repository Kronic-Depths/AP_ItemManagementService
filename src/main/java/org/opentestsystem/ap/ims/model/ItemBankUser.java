/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.model;

import lombok.EqualsAndHashCode;
import lombok.Getter;

/**
 * The basic information needed to record the user who made
 * changes to an item.  The properties 'username' and 'fullname'
 * are used to set the Git configuration.
 */
@Getter
@EqualsAndHashCode
public class ItemBankUser {

    private final String username;

    private final String fullname;

    public ItemBankUser(String username, String fullname) {
        this.username = username;
        this.fullname = fullname;
    }

    /**
     * "Parse" means if the username is an email this method will
     * take the name appearing before the @ symbol.  For example,
     * if the username is john.doe@fake.com then john.doe is returned
     * by this method.  If no @ symbol is found the username is returned.
     *
     * @return The value parsed out of an email address or the username if not an email address.
     */
    public String parseUsername() {
        String name = username;
        if (username != null && username.contains("@")) {
            name = username.split("@")[0];
        }
        return name;
    }

}
