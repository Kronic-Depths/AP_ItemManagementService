/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.saaif;

import org.opentestsystem.ap.common.saaif.SaaifIdDigitGenerator;
import org.opentestsystem.ap.ims.repository.SequenceRepository;

/**
 * ID generator using a database sequence.  The sequence generator extends
 * from the digit generator so that it will reuse how the transaction ID
 * is generated.
 */
public class SaaifIdSequenceGenerator extends SaaifIdDigitGenerator {

    private final SequenceRepository sequenceRepository;

    public SaaifIdSequenceGenerator(final int minValue, final int maxValue,
                                    final SequenceRepository sequenceRepository) {
        super(minValue, maxValue);
        this.sequenceRepository = sequenceRepository;
    }

    @Override
    public String generateItemId(String itemType) {
        return sequenceRepository.nextItemIdSequence().toString();
    }

}
