/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.rest.v1;

import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;
import org.opentestsystem.ap.ims.entity.Item;
import org.opentestsystem.ap.ims.service.ItemBankService;
import org.opentestsystem.ap.ims.util.ValidationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import static org.opentestsystem.ap.ims.util.AppConstants.API_V1;

/**
 * CRUD operations for items.
 */
@Slf4j
@RestController
@RequestMapping("${api.context-path}/" + API_V1 + "/items")
public class ItemApi {

    private final ItemBankService itemBankService;

    @Autowired
    public ItemApi(ItemBankService itemBankService) {
        this.itemBankService = itemBankService;
    }

    /**
     * Create an item in the item bank.
     *
     * @return The item's unique identifier.
     */
    @PostMapping
    public Item createNewItem(@RequestBody Item request) {
        log.debug("create new item");
        if (request == null || StringUtils.isBlank(request.getType())) {
            throw new ValidationException("Type is required when creating a new item.");
        }
        final String itemId = itemBankService.createItem(request.getType());
        request.setId(itemId);
        return request;
    }

}
