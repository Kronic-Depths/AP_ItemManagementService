/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.entity;

import java.io.Serializable;
import java.util.List;

import lombok.Data;

/**
 * The public API representation of an item.
 */
@Data
public class Item implements Serializable {

    private String id;

    private String type;

    private String version;

    private String beingCreatedBy;

    private String beingEditedBy;

    private List<Attribute> attributes;

    private List<Content> contents;

    public static final class ItemBuilder {

        private String id;

        private String type;

        private String version;

        private String beingCreatedBy;

        private String beingEditedBy;

        private List<Attribute> attributes;

        private List<Content> contents;

        private ItemBuilder() {
        }

        public static ItemBuilder anItem() {
            return new ItemBuilder();
        }

        public static Item byItem(final Item item) {
            return anItem().item(item).build();
        }

        public ItemBuilder item(Item item) {
            return id(item.getId())
                .type(item.getType())
                .version(item.getVersion())
                .beingCreatedBy(item.getBeingCreatedBy())
                .beingEditedBy(item.getBeingEditedBy())
                .attributes(item.getAttributes())
                .contents(item.getContents());
        }

        public ItemBuilder id(String id) {
            this.id = id;
            return this;
        }

        public ItemBuilder type(String type) {
            this.type = type;
            return this;
        }

        public ItemBuilder version(String version) {
            this.version = version;
            return this;
        }

        public ItemBuilder beingCreatedBy(String beingCreatedBy) {
            this.beingCreatedBy = beingCreatedBy;
            return this;
        }

        public ItemBuilder beingEditedBy(String beingEditedBy) {
            this.beingEditedBy = beingEditedBy;
            return this;
        }

        public ItemBuilder attributes(List<Attribute> attributes) {
            this.attributes = attributes;
            return this;
        }

        public ItemBuilder contents(List<Content> contents) {
            this.contents = contents;
            return this;
        }

        public Item build() {
            Item item = new Item();
            item.setId(id);
            item.setType(type);
            item.setVersion(version);
            item.setBeingCreatedBy(beingCreatedBy);
            item.setBeingEditedBy(beingEditedBy);
            item.setAttributes(attributes);
            item.setContents(contents);
            return item;
        }
    }
}
