/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.rest.v1;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.ap.ims.service.ItemBankService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import static org.mockito.BDDMockito.given;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@ActiveProfiles(value = "it-test")
@RunWith(SpringRunner.class)
@WebMvcTest(ItemApi.class)
public class ItemApiIT {

    private static final String NEW_ITEM_ID = "new-item-id";

    @Autowired
    private MockMvc mvc;

    @MockBean
    private ItemBankService itemBankService;

    @Test
    public void testCreateItem() throws Exception {
        given(this.itemBankService.createItem()).willReturn(NEW_ITEM_ID);
        this.mvc.perform(post("/api/items/")).andExpect(status().isOk()).andExpect(content().string(NEW_ITEM_ID));
    }

}
