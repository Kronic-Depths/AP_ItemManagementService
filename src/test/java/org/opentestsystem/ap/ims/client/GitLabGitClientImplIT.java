/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.client;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.ap.ims.config.GitlabConfig;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;

@ActiveProfiles(value = "test")
@RunWith(SpringRunner.class)
@SpringBootTest
@ContextConfiguration(classes = {GitlabConfig.class})
public class GitLabGitClientImplIT {

    private GitClient client;

    @Before
    public void setup() {
        client = new GitLabGitClientImpl(gitTestUtil.getGitlabProperties());
    }

    @After
    public void teardown() {
        if (gitTestUtil != null) {
            gitTestUtil.cleanup();
        }
    }

    // ------------------------------------------------------------------------

    @Test
    public void itShouldCloneRepository() {
        client.cloneRepository(gitTestUtil.getGitLabProject());
    }}
