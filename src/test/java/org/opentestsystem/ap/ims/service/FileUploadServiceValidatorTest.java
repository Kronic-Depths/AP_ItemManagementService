/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.service;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.common.util.ValidationException;

import static org.assertj.core.api.Assertions.assertThat;

public class FileUploadServiceValidatorTest {

    private FileUploadServiceValidator validator;

    @Before
    public void setup() {
        validator = new FileUploadServiceValidator();
    }


    @Test
    public void itShouldValidateFileName() {
        // --------------
        // Positive
        // --------------
        assertThat(validateBrailleFileName("stim_EBSR8393_enu_contracted.brf")).isTrue();
        assertThat(validateBrailleFileName("stim_8393_enu_contracted_transcript.brf")).isTrue();
        assertThat(validateBrailleFileName("item_8393_enu_uncontracted.brf")).isTrue();
        assertThat(validateBrailleFileName("item_8393_enu_uncontracted_transcript.brf")).isTrue();
        assertThat(validateBrailleFileName("passage_8393_enu_nemeth.brf")).isTrue();
        assertThat(validateBrailleFileName("passage_8393_enu_nemeth_transcript.brf")).isTrue();

        assertThat(validateBrailleFileName("stim_8393_enu_contracted.prn")).isTrue();
        assertThat(validateBrailleFileName("stim_8393_enu_contracted_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_8393_enu_uncontracted.prn")).isTrue();
        assertThat(validateBrailleFileName("item_8393_enu_uncontracted_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("passage_8393_enu_nemeth.prn")).isTrue();
        assertThat(validateBrailleFileName("passage_8393_enu_nemeth_transcript.prn")).isTrue();

        assertThat(validateBrailleFileName("item_20551_enu_exn.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_exn_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ext.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ext_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_exl.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_exl_transcript.prn")).isTrue();

        assertThat(validateBrailleFileName("item_20551_enu_ecn.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ecn_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ect.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ect_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ecl.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ecl_transcript.prn")).isTrue();

        assertThat(validateBrailleFileName("item_20551_enu_uxn.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uxn_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uxt.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uxt_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uxl.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uxl_transcript.prn")).isTrue();

        assertThat(validateBrailleFileName("item_20551_enu_ucn.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ucn_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uct.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_uct_transcript.prn")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ucl.brf")).isTrue();
        assertThat(validateBrailleFileName("item_20551_enu_ucl_transcript.prn")).isTrue();

        // --------------
        // Negative
        // --------------
        assertThat(validateBrailleFileName("item_8393_enu_uncontracted_transcript.txt")).isFalse();
        assertThat(validateBrailleFileName("item_20551_enu_eyn.brf")).isFalse();
    }

    boolean validateBrailleFileName(String fileName) {
        try {
            validator.validateBrailleFileName(fileName);
        } catch (ValidationException e) {
            return false;
        }
        return true;
    }
}
