/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.service;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.common.model.AttachmentFileType;
import org.opentestsystem.ap.ims.model.AttachmentFile;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.ap.common.model.AttachmentFileType.FILE_TYPE_BRAILLE;

public class FileUploadServiceMapperTest {

    private FileUploadServiceMapper mapper;

    @Before
    public void setup() {
        mapper = new FileUploadServiceMapper();
    }

    @Test
    public void itShouldCreateAttachment() {
        assertBrailleFile("stim_8393_enu_uxn_transcript.brf", "8393", "stim", "BRF",
            "uxn_transcript", "enu", FILE_TYPE_BRAILLE);

        assertBrailleFile("stim_8393_enu_ecl.brf", "8393", "stim", "BRF",
            "ecl", "enu", FILE_TYPE_BRAILLE);
    }

    void assertBrailleFile(final String fileName, final String itemId, final String itemType,
                           final String type, final String subtype, final String language,
                           final AttachmentFileType attachmentFileType) {
        final AttachmentFile attachmentFile = mapper.newAttachmentFile(fileName, attachmentFileType);
        assertThat(attachmentFile.getFileName()).isEqualTo(fileName);
        assertThat(attachmentFile.getItemId()).isEqualTo(itemId);
        assertThat(attachmentFile.getItemType()).isEqualTo(itemType);
        assertThat(attachmentFile.getLanguage()).isEqualTo(language);
        assertThat(attachmentFile.getType()).isEqualTo(type);
        assertThat(attachmentFile.getSubtype()).isEqualTo(subtype);
    }
}
