/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.repository;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.springframework.jdbc.core.JdbcTemplate;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class SequenceRepositoryTest {

    @Mock
    private JdbcTemplate mockJdbcTemplate;

    private SequenceRepository sequenceRepository;

    @Before
    public void setup() {
        sequenceRepository = new SequenceRepository(mockJdbcTemplate);
    }

    @Test
    public void itShouldGetTheNextItemIdSequence() {
        when(mockJdbcTemplate.queryForObject(SequenceRepository.SELECT_ITEM_ID_SEQUENCE, Long.class)).thenReturn(99L);
        final Long itemId = sequenceRepository.nextItemIdSequence();
        assertThat(itemId).isEqualTo(99L);
    }
}
