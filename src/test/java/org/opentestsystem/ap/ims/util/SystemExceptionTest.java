/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.ap.ims.util;

import org.junit.Test;

import java.io.IOException;

import static org.assertj.core.api.Assertions.assertThat;

public class SystemExceptionTest {

    @Test
    public void itShouldCreateInstanceUsingNoArgConstructor() {
        new SystemException();
    }

    @Test
    public void itShouldCreateInstanceUsingOnlyMessage() {
        final SystemException systemException = new SystemException("validation error");
        assertThat(systemException.getMessage()).isEqualTo("validation error");
    }

    @Test
    public void itShouldCreateInstanceUsingExistingThrowableWithNullErrorMessage() {
        IOException ioException = new IOException("IO Error");
        final SystemException systemException = new SystemException(ioException);
        assertThat(systemException.getMessage()).contains("IO Error");
        assertThat(systemException.getCause()).isEqualTo(ioException);
    }

    @Test
    public void itShouldCreateInstanceUsingExistingThrowable() {
        IOException ioException = new IOException("IO Error");
        final SystemException systemException = new SystemException("validation error", ioException);
        assertThat(systemException.getMessage()).isEqualTo("validation error");
        assertThat(systemException.getCause()).isEqualTo(ioException);
    }
}
