/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.config;

import org.gitlab.api.models.GitlabSession;
import org.opentestsystem.ap.ims.util.ItemIdGenerator;
import org.opentestsystem.saaif.item.SaaifItemFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.io.IOException;

/**
 * Disabled by default. If the gitlab.enabled property is set to false only then is
 * this configuration loaded.
 */
@Configuration
@ConditionalOnProperty(value = "itembank.itShouldCreateSAItemAndUpdateItWithChanges.enabled", havingValue = "true", matchIfMissing = false)
public class NoRedisSessionConfig {

    public final ItemBankProperties props;

    @Autowired
    public NoRedisSessionConfig(ItemBankProperties props) {
        this.props = props;
    }

    @Bean
    public GitlabSession gitlabSession() throws IOException {
        return new GitlabSession();
    }

    @Bean
    public ItemIdGenerator itemIdGenerator() {
        return new ItemIdGenerator(props.getIdMinValue(), props.getIdMaxValue());
    }

    @Bean
    public SaaifItemFactory itemFactory() {
        return new SaaifItemFactory();
    }
}
