/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ims.rest;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.JUnit4;
import org.opentestsystem.ap.common.model.SaItem;
import org.opentestsystem.ap.ims.util.IMSTestUtil;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.ap.ims.util.IMSTestUtil.COMMIT_MESSAGE;

@RunWith(JUnit4.class)
public class ItemChangeRequestTest {

    private IMSTestUtil testUtil;

    @Before
    public void setup() {
        testUtil = new IMSTestUtil();
    }

    @Test
    public void itShouldBuildItemChangeRequest() {

        final SaItem saItem = testUtil.newSaItem();
        final ItemChangeRequest itemChangeRequest = ItemChangeRequest.ItemChangeRequestBuilder
            .aItemChangeRequest()
                .item(saItem)
                .message(COMMIT_MESSAGE)
            .build();

        assertThat(itemChangeRequest).isNotNull();
        assertThat(itemChangeRequest.getMessage()).isEqualTo(COMMIT_MESSAGE);
        assertThat(itemChangeRequest.getItem()).isEqualTo(saItem);

    }
}
