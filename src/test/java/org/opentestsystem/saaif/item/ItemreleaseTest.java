/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.opentestsystem.saaif.item;

import org.junit.Test;

import javax.xml.bind.Marshaller;

import static java.lang.System.out;
import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.saaif.item.ItemFormat.FORMAT_SHORT_ANSWER;
import static org.opentestsystem.saaif.item.ItemTestUtil.WITH_SCHEMA_VALIDATION;
import static org.opentestsystem.saaif.item.ItemTestUtil.xmlMarshaller;

public class ItemreleaseTest {

    private static final SaaifEntityFactory FACTORY = new SaaifEntityFactory();

    @Test
    public void itShouldMarshalObjectToXml() throws Exception {
        final String itemId = "1234";
        final Itemrelease shortAnswer = FACTORY.newItemRelease(itemId, FORMAT_SHORT_ANSWER);

        assertThat(shortAnswer).isNotNull();
        assertThat(shortAnswer.getItem()).isNotNull();
        assertThat(shortAnswer.getItem().getId()).isEqualTo(itemId);
        assertThat(shortAnswer.getItem().getContent()).hasSize(1);

        final Itemrelease.Item.Content content = shortAnswer.getItem().getContent().get(0);

        assertThat(content.getStem()).startsWith("<p style=\"\">");

        final Marshaller xmlMarshaller = xmlMarshaller(WITH_SCHEMA_VALIDATION);
//        final Marshaller xmlMarshaller = xmlMarshaller(NO_SCHEMA_VALIDATION);
        xmlMarshaller.marshal(shortAnswer, out);
    }
}
